plz <- dalies_final %>% group_by(week_number) %>%
summarise(mean_week = mean(!!sym(var))) %>%
rename(!!paste0(var,"_Avg") := mean_week)
Week_averages[[var]] <- plz
}
rm(plz)
#How I can index into individual data frames(ex binary variables) from within the master list
Week_averages[[1]]
print(Week_averages)
plots <- list()
x_var <- "week_number"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots <- map2(Week_averages, y_var, function(df, y) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_point() +
geom_smooth(color = "red", linetype = "solid", se = FALSE) +  #Se = False argument gets rid of confidence interval
scale_x_continuous(
breaks = seq(20, 45, by = 5),
limits = c(20, 45)) +
geom_abline(intercept = lines[index], slope =0, color = "green4", linetype = "longdash") +
geom_vline(xintercept = 22, color = "purple") +
theme_clean()
}, reference_lines)
plots <- list()
x_var <- "week_number"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots <- map2(Week_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_point() +
geom_smooth(color = "red", linetype = "solid", se = FALSE) +  #Se = False argument gets rid of confidence interval
scale_x_continuous(
breaks = seq(20, 45, by = 5),
limits = c(20, 45)) +
geom_abline(intercept = lines[index], slope =0, color = "green4", linetype = "longdash") +
geom_vline(xintercept = 22, color = "purple") +
theme_clean()
}, reference_lines)
plots[8]
#Combining all of the plots into 1 nice easy to view place
plot_grid(plotlist = plots, ncol = 4)
plots <- list()
x_var <- "week_number"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
reference_lines <- (c(.9, .8, .9, .35, .75, .3, .98, .35, .15, .4, .4, .6, .7, .3)) #These numbers correspond to the y_var for goals
plots <- map2(Week_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_point() +
geom_smooth(color = "red", linetype = "solid", se = FALSE) +  #Se = False argument gets rid of confidence interval
scale_x_continuous(
breaks = seq(20, 45, by = 5),
limits = c(20, 45)) +
geom_abline(intercept = lines[index], slope =0, color = "green4", linetype = "longdash") +
geom_vline(xintercept = 22, color = "purple") +
theme_clean()
}, reference_lines)
plots[8]
#Combining all of the plots into 1 nice easy to view place
plot_grid(plotlist = plots, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = y, group = factor(day))) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar() +
#scale_x_continuous(
#breaks = seq(20, 45, by = 5),
#limits = c(20, 45)) +
#geom_abline(intercept = lines[index], slope =0, color = "green4", linetype = "longdash") +
#geom_vline(xintercept = 22, color = "purple") +
theme_clean()
})
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = y, group = day)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar() +
#scale_x_continuous(
#breaks = seq(20, 45, by = 5),
#limits = c(20, 45)) +
#geom_abline(intercept = lines[index], slope =0, color = "green4", linetype = "longdash") +
#geom_vline(xintercept = 22, color = "purple") +
theme_clean()
})
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar() +
#scale_x_continuous(
#breaks = seq(20, 45, by = 5),
#limits = c(20, 45)) +
#geom_abline(intercept = lines[index], slope =0, color = "green4", linetype = "longdash") +
#geom_vline(xintercept = 22, color = "purple") +
theme_clean()
})
plots[8]
day_averages
View(day_averages)
day_averages[1]
ggplot(day_averages[1], x = day) +
geom_bar()
ggplot(data = day_averages[1], x = day) +
geom_bar()
ggplot(data = day_averages[[1]], x = day) +
geom_bar()
ggplot(data = day_averages[[1]], x = day) +
geom_bar(stat = count)
ggplot(data = day_averages[[1]], x = day) +
geom_bar(stat = "identity")
day_averages[[1]]
ggplot(data = day_averages[[1]], x = day, y = Teeth_bin_Avg) +
geom_bar(stat = "identity")
day_averages[[1]]
ggplot(data = day_averages[[1]], aes(x = "day", y = "Teeth_bin_Avg")) +
geom_bar(stat = "identity")
ggplot(data = day_averages[[1]], aes(x = day, y = Teeth_bin_Avg)) +
geom_bar(stat = "identity")
ggplot(data = day_averages[[1]], aes(x = day, y = Teeth_bin_Avg, group = day)) +
geom_bar(stat = "identity")
ggplot(data = day_averages[[1]], aes(x = day, y = Teeth_bin_Avg, color = day)) +
geom_bar(stat = "identity")
ggplot(data = day_averages[[1]], aes(x = day, y = Teeth_bin_Avg, fill = day)) +
geom_bar(stat = "identity")
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y_var)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar() +
theme_clean()
})
plots <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar() +
theme_clean()
})
plots[8]
plots
plots <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
theme_clean()
})
plots[8]
plots <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = ""
) +
theme_clean()
})
plots[8]
plots
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = ""
) +
theme_clean()
})
plots_day[8]
ggplot(data = day_averages[[1]], aes(x = day, y = Teeth_bin_Avg, fill = day)) +
geom_bar(stat = "identity")
plot_grid(plotlist = plots, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = ""
) +
theme_clean()
})
plots_day[8]
ggplot(data = day_averages[[1]], aes(x = day, y = Teeth_bin_Avg, fill = day)) +
geom_bar(stat = "identity")
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = ""
) +
scale_x_continuous(labels = c("M", "T", "W", "TH","F","S","SU")) +
theme_clean()
})
plots_day[8]
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = ""
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) +
theme_clean()
})
plots_day[8]
ggplot(data = day_averages[[1]], aes(x = day, y = Teeth_bin_Avg, fill = day)) +
geom_bar(stat = "identity")
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = ""
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
week_number_filter <- 22
day_averages <- list()
#Getting the names of the binary variables from a previous data frame to input for our average analysis
variables_bin <- names(dalies_bin_all)
week_number_filter <- 22
#Using a for loop that creates a new data frame for all binary variables that calculates the success rate of each variable by week
#The rename() function uses the := operator to assign the new name to the column, on the left side of the operator we use !!paste0(var,"Week average") to create the new name by concatenating var with the string "Week average" , this is passed as the new name for the column "mean_by_week
for (var in variables_bin){
plz <- dalies_final %>%
filter(week_number >= week_number_filter) %>% # What time period I want to look at (set now for when I revamped my tracking)
group_by(day) %>%
summarise(mean_day = mean(!!sym(var))) %>%
rename(!!paste0(var,"_Avg") := mean_day)
day_averages[[var]] <- plz
}
rm(plz)
#How I can index into individual data frames(ex binary variables) from within the master list
day_averages[[1]]
print(day_averages)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y, color = "black")) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y), color = "black") + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y), color = "red") + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y), fill = "red") + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity", color = "red") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity", fill = "red") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity", color = "black", fill = "red") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity", color = "black", fill = "tomato1") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity", color = "black", fill = "tomato3") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_histogram(stat = "identity", color = "black", fill = "tomato3") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity", color = "black", fill = "tomato3") +
labs(
x = NULL
) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
day_plots <- list()
x_var <- "day"
#For note there are 14 y variables
y_var <- c( "Teeth_bin_Avg", "Shower_bin_Avg", "Acne_bin_Avg", "Shave_Avg", "Mouthwash_Avg", "Floss_Avg", "Pills_Avg", "Workout_Avg ", "Run_Avg", "Yoga_Avg ", "Fruit_Avg", "Reading_Avg", "Code_Avg", "Language_Avg")
plots_day <- map2(day_averages, y_var, function(df, y, lines) {
index <- match(y, y_var)  #the match() function is used to find the index of the current y variable in the y_var vector
ggplot(data = df, aes_string(x = x_var, y = y)) + #note the use of "aes_string" because I'm passing in multiple strings not values or objects
geom_bar(stat = "identity", color = "black", fill = "tomato3") +
labs(x = NULL ) +
scale_x_discrete(labels = c("M", "T", "W", "TH","F","S","SU")) + # Adding shorter labels to the x axis to better see in plots_day
theme_clean()
})
plots_day[8]
plot_grid(plotlist = plots_day, ncol = 4)
